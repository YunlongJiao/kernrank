% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kendall_weight.R
\name{kendall_weight}
\alias{kendall_weight}
\title{Weighted Kendall kernel for total rankings}
\usage{
kendall_weight(x, y, method = c("aken", "ken", "top", "add", "mult"),
  k = NULL, u = NULL, normalized = TRUE)
}
\arguments{
\item{x, y}{Vector. 
If \code{x} is numeric, the rank vector converted from \code{x} indicate that larger values mean being preferred.
NAs are not allowed.}

\item{method}{Character. The method to perform weighted Kendall kernel. Choices include
\itemize{
\item \code{aken} denotes the Average Kendall kernel.
\item \code{ken} denotes the standard Kendall kernel.
\item \code{top} denotes the TOP-k Kendall kernel.
\item \code{add} denotes weighted Kendall kernel with ADDitive weights.
\item \code{mult} denotes weighted Kendall kernel with MULTiplicative weights.
}}

\item{k}{Integer. The parameter in top-\code{k} Kendall kernel.
Top-\code{k} implies ranks larger than k, where larger ranks mean being more preferred.}

\item{u}{Numeric vector. The parameter in additive or multiplicative weighted Kendall kernel.}

\item{normalized}{Logical. Whether to normalize the output kernel value.
The weighted Kendall kernel elaborated in Jiao and Vert (2018) corresponds to
the non-normalized version by setting \code{normalized=FALSE}.}
}
\value{
Weighted Kendall kernel for total rankings,
where ties (supposed few) are broken by adopting a convolution kernel averaging compatible rankings without ties.
}
\description{
Calculates weighted Kendall kernel between total rankings in time \code{O(nlogn)},
where ties (supposed few) are broken by adopting a convolution kernel
averaging compatible rankings without ties.
}
\examples{
x <- c(1.5, 0.1, 0, -4, 0)
y <- c(0, 0, 0, 3, 0)

# Average Kendall kernel
kendall_weight(x, y, method = "aken")

# Standard Kendall kernel is equiv to kendall_total
kendall_weight(x, y, method = "ken", normalized = TRUE)
kendall_total(x, y)

# Top-1 Kendall kernel is equiv to Standard Kendall kernel
kendall_weight(x, y, method = "ken")
kendall_weight(x, y, method = "top", k = 1)

# Additive/multiplicative weights with hyperbolic reduction factor
u <- 1/(length(x):1 + 1)
kendall_weight(x, y, method = "add", u = u)
kendall_weight(x, y, method = "mult", u = u)

}
\references{
Yunlong Jiao, Jean-Philippe Vert. "The Weighted Kendall and High-order Kernels for Permutations." arXiv preprint arXiv:1802.08526, 2018. \href{https://arxiv.org/abs/1802.08526}{arXiv:1802.08526}
}
\author{
Yunlong Jiao
}
\keyword{Kendall}
\keyword{Kernel}
\keyword{TotalRanking}
\keyword{Weighted}
